{"ast":null,"code":"var _jsxFileName = \"/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 20 - Single Page App/Project 2 /frontend/src/pages/NewEventPage.jsx\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const event = {\n    title: data.get(\"title\"),\n    date: data.get(\"date\"),\n    image: data.get(\"image\"),\n    description: data.get(\"description\")\n  };\n  const body = JSON.stringify(event);\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'could not save event'\n    }, {\n      status: response.status\n    });\n  }\n  return response.json();\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","event","title","get","date","image","description","body","JSON","stringify","response","fetch","method","headers","ok","message","status","$RefreshReg$"],"sources":["/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 20 - Single Page App/Project 2 /frontend/src/pages/NewEventPage.jsx"],"sourcesContent":["import EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\n\nexport default function NewEventPage() {\n  return <EventForm />;\n}\n\nexport async function action({ request, params }) {\n  const data = await request.formData();\n  const event = {\n    title: data.get(\"title\"),\n    date: data.get(\"date\"),\n    image: data.get(\"image\"),\n    description: data.get(\"description\"),\n  };\n\n  const body = JSON.stringify(event);\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  });\n\n  if (!response.ok) {\n    throw json({ message: 'could not save event' }, { status: response.status });\n  }\n\n  return response.json();\n}\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,oBAAOD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACC,EAAA,GAFuBL,YAAY;AAIpC,OAAO,eAAeM,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAG;IACZC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,IAAI,EAAEL,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBE,KAAK,EAAEN,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC;EAElC,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDN;EACF,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM3B,IAAI,CAAC;MAAE4B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAAEC,MAAM,EAAEN,QAAQ,CAACM;IAAO,CAAC,CAAC;EAC9E;EAEA,OAAON,QAAQ,CAACvB,IAAI,CAAC,CAAC;AACxB;AAAC,IAAAQ,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
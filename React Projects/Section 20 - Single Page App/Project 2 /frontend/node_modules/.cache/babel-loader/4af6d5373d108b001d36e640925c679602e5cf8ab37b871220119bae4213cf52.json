{"ast":null,"code":"var _jsxFileName = \"/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 20 - Single Page App/Project 2 /frontend/src/pages/EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: response.statusText }), {\n    //   status: response.status,\n    // });\n\n    throw json({\n      message: response.statusText\n    }, {\n      status: response.status\n    });\n  }\n  const data = await response.json();\n  return data;\n}\nexport function loader() {}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","statusText","status","data","loader","$RefreshReg$"],"sources":["/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 20 - Single Page App/Project 2 /frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nexport default function EventsPage() {\n  const { events } = useLoaderData();\n  return <EventsList events={events} />;\n}\n\nasync function loadEvents(){\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: response.statusText }), {\n    //   status: response.status,\n    // });\n\n    throw json({ message: response.statusText }, { status: response.status });\n  }\n  const data = await response.json();\n\n  return data;\n}\n\nexport function loader() {\n\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAO,CAAC,GAAGP,aAAa,CAAC,CAAC;EAClC,oBAAOI,OAAA,CAACF,UAAU;IAACK,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACL,EAAA,CAHuBD,UAAU;EAAA,QACbL,aAAa;AAAA;AAAAY,EAAA,GADVP,UAAU;AAKlC,eAAeQ,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;;IAEA,MAAMf,IAAI,CAAC;MAAEgB,OAAO,EAAEH,QAAQ,CAACI;IAAW,CAAC,EAAE;MAAEC,MAAM,EAAEL,QAAQ,CAACK;IAAO,CAAC,CAAC;EAC3E;EACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACb,IAAI,CAAC,CAAC;EAElC,OAAOmB,IAAI;AACb;AAEA,OAAO,SAASC,MAAMA,CAAA,EAAG,CAEzB;AAAC,IAAAT,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 20 - Single Page App/Project 2 /frontend/src/pages/EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: data.events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: response.statusText }), {\n    //   status: response.status,\n    // });\n\n    throw json({\n      message: response.statusText\n    }, {\n      status: response.status\n    });\n  }\n  const data = await response.json();\n  return data;\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","statusText","status","loader","$RefreshReg$"],"sources":["/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 20 - Single Page App/Project 2 /frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nexport default function EventsPage() {\n  const {events} = useLoaderData();\n  return <Await resolve={data.events}></Await>\n}\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: response.statusText }), {\n    //   status: response.status,\n    // });\n\n    throw json({ message: response.statusText }, { status: response.status });\n  }\n  const data = await response.json();\n\n  return data;\n}\n\nexport function loader() {\n  defer({\n    events: loadEvents(),\n  });\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAACC;EAAM,CAAC,GAAGT,aAAa,CAAC,CAAC;EAChC,oBAAOM,OAAA,CAACH,KAAK;IAACO,OAAO,EAAEC,IAAI,CAACF;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC9C;AAACP,EAAA,CAHuBD,UAAU;EAAA,QACfP,aAAa;AAAA;AAAAgB,EAAA,GADRT,UAAU;AAKlC,eAAeU,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;;IAEA,MAAMnB,IAAI,CAAC;MAAEoB,OAAO,EAAEH,QAAQ,CAACI;IAAW,CAAC,EAAE;MAAEC,MAAM,EAAEL,QAAQ,CAACK;IAAO,CAAC,CAAC;EAC3E;EACA,MAAMZ,IAAI,GAAG,MAAMO,QAAQ,CAACjB,IAAI,CAAC,CAAC;EAElC,OAAOU,IAAI;AACb;AAEA,OAAO,SAASa,MAAMA,CAAA,EAAG;EACvBtB,KAAK,CAAC;IACJO,MAAM,EAAEQ,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
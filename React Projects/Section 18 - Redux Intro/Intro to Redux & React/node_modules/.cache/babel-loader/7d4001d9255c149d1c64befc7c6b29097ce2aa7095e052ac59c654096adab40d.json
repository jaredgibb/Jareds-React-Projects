{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  value: 0,\n  showCounter: true\n};\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.value++;\n    },\n    decrement(state) {\n      state.value--;\n    },\n    increase(state, action) {\n      state.value += action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        value: state.value + 1\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        value: state.value - 1\n      };\n    case \"INCREASE\":\n      return {\n        ...state,\n        value: state.value + action.amount\n      };\n    case \"TOGGLE\":\n      return {\n        ...state,\n        showCounter: !state.showCounter\n      };\n    default:\n      return state;\n  }\n};\nconst store = createStore(reducer, {\n  value: 0\n});\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","value","showCounter","INCREMENT","DECREMENT","name","reducers","increment","state","decrement","increase","action","payload","toggle","reducer","type","amount","store"],"sources":["/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 18 - Redux Intro/Intro to Redux & React/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { value: 0, showCounter: true };\n\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\n\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.value++;\n    },\n    decrement(state) {\n      state.value--;\n    },\n    increase(state, action) {\n      state.value += action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state, value: state.value + 1 };\n    case \"DECREMENT\":\n      return { ...state, value: state.value - 1 };\n    case \"INCREASE\":\n      return { ...state, value: state.value + action.amount };\n    case \"TOGGLE\":\n      return { ...state, showCounter: !state.showCounter };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, { value: 0 });\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEpD,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpCL,WAAW,CAAC;EACVM,IAAI,EAAE,SAAS;EACfL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,KAAK,EAAE;IACf,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,KAAK,EAAE;IACf,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACP,KAAK,IAAIU,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAIF,MAAMY,OAAO,GAAGA,CAACN,KAAK,GAAGR,YAAY,EAAEW,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACI,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAE,GAAGP,KAAK;QAAEP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAG;MAAE,CAAC;IAC7C,KAAK,WAAW;MACd,OAAO;QAAE,GAAGO,KAAK;QAAEP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAG;MAAE,CAAC;IAC7C,KAAK,UAAU;MACb,OAAO;QAAE,GAAGO,KAAK;QAAEP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAGU,MAAM,CAACK;MAAO,CAAC;IACzD,KAAK,QAAQ;MACX,OAAO;QAAE,GAAGR,KAAK;QAAEN,WAAW,EAAE,CAACM,KAAK,CAACN;MAAY,CAAC;IACtD;MACE,OAAOM,KAAK;EAChB;AACF,CAAC;AAED,MAAMS,KAAK,GAAGnB,WAAW,CAACgB,OAAO,EAAE;EAAEb,KAAK,EAAE;AAAE,CAAC,CAAC;AAEhD,eAAegB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
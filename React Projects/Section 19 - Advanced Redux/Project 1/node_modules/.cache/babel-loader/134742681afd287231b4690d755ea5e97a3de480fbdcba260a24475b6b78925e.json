{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://scorecard-x-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data\");\n      }\n      const data = await response.json();\n      con;\n      return data;\n    };\n    try {\n      const cartData = fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Fetching cart data failed\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cartData => {\n  return async dispatch => {\n    dispatch(cartActions.showNotification({\n      status: \"pending\",\n      title: \"Update\",\n      message: \"We are starting to grab data\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://scorecard-x-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(cartActions.showNotification({\n        status: \"success\",\n        title: \"Update\",\n        message: \"Data is sent\"\n      }));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: \"error\",\n        title: \"Update\",\n        message: \"An error ocurred\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","con","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","sendRequest","method","body","JSON","stringify"],"sources":["/Users/jared/Documents/dev/Jareds-React-Projects/React Projects/Section 19 - Advanced Redux/Project 1/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://scorecard-x-default-rtdb.firebaseio.com/cart.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data\");\n      }\n      const data = await response.json(); con\n      return data;\n    };\n\n    try {\n      const cartData = fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(\n        cartActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Fetching cart data failed\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cartData) => {\n  return async (dispatch) => {\n    dispatch(\n      cartActions.showNotification({\n        status: \"pending\",\n        title: \"Update\",\n        message: \"We are starting to grab data\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://scorecard-x-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cartData),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending data failed\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        cartActions.showNotification({\n          status: \"success\",\n          title: \"Update\",\n          message: \"Data is sent\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        cartActions.showNotification({\n          status: \"error\",\n          title: \"Update\",\n          message: \"An error ocurred\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DACF,CAAC;MACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAAEC,GAAG;MACvC,OAAOF,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAMG,QAAQ,GAAGR,SAAS,CAAC,CAAC;MAC5BD,QAAQ,CAACF,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdX,QAAQ,CACNF,WAAW,CAACc,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIP,QAAQ,IAAK;EACxC,OAAO,MAAOT,QAAQ,IAAK;IACzBA,QAAQ,CACNF,WAAW,CAACc,gBAAgB,CAAC;MAC3BC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,QAAQ;MACfC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DAA2D,EAC3D;QACEe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ;MAC/B,CACF,CAAC;MAED,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC;IAED,IAAI;MACF,MAAMY,WAAW,CAAC,CAAC;MACnBjB,QAAQ,CACNF,WAAW,CAACc,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdX,QAAQ,CACNF,WAAW,CAACc,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}